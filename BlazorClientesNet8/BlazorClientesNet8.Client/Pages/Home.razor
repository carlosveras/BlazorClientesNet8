@page "/"

@rendermode InteractiveServer



<div style="display: flex; flex-wrap: wrap;">
    @foreach (var item in Categorias.Where(p => p.Status == true))
    {
        <div style="flex: 1; margin: 10px;">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudAvatar Color="Color.Secondary">I</MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">@item.Nome</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardMedia Image="@item.IconCSS" Height="15" />
                <MudCardContent>
                    <MudText Typo="Typo.body2">@item.TotalDaCategoria.ToString() itens</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudIconButton Href="@item.PaginaDetalhes" Variant="Variant.Text" Color="Color.Default" />
                </MudCardActions>
            </MudCard>
        </div>
    }
</div>



@code {
    private List<Categoria> Categorias { get; set; } = new();

    private async Task CarregaCategorias()
    {
        var categorias = await _categoriaService.GetAllCategoriasAsync();

        Categorias?.Clear();

        if (Categorias is null) return;

        foreach (var cliente in categorias)
            Categorias.Add(cliente);
    }

    protected override async Task OnInitializedAsync()
    {
        await CarregaCategorias();
    }

}