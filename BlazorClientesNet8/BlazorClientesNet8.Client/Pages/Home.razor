@page "/"

@rendermode InteractiveServer

<div style="display: flex; flex-wrap: wrap;">
    @foreach (var item in Categorias.Where(p => p.Status == true))
    {
        <div style="flex: 1; margin: 10px;">
            <MudCard>
                <MudCardHeader Class="bold-total">
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">@item.Nome</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                @if (item.Nome == "Usuarios")
                {
                    <MudCardContent>
                        <MudButton Color="Color.Primary" Href="@item.PaginaDetalhes">Usuarios CLT HOJE @item.TotalUsersCltToday.ToString()</MudButton>
                        <MudButton Color="Color.Success" Href="/admitidoshojeclt">Usuarios CLT Admitidos HOJE @item.TotalUsersCltAdmittedOnDay.ToString()</MudButton>
                        <MudButton Color="Color.Error" Href="/demitidoshojeclt">Usuarios CLT Desligados HOJE @item.TotalUsersCltFiredOnDay.ToString()</MudButton>
                        <MudButton Color="Color.Error" Href="/demitidosnomes">Usuarios Desligados Neste Mes @item.TotalUsersFiredOnMonth</MudButton>
                    </MudCardContent>
                }

                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" Href="@item.PaginaDetalhes">Detalhes</MudButton>
                </MudCardActions>
            </MudCard>
        </div>
    }
</div>




@code {
    private List<Categoria> Categorias { get; set; } = new();

    private async Task CarregaCategorias()
    {
        var categorias = await _categoriaService.GetAllCategoriasAsync();

        Categorias?.Clear();

        if (Categorias is null) return;

        foreach (var cliente in categorias)
            Categorias.Add(cliente);
    }

    protected override async Task OnInitializedAsync()
    {
        await CarregaCategorias();
    }

}