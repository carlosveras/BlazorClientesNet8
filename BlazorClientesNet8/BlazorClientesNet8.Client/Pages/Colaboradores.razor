@page "/colaboradores"
@using System.Net.Http.Json
@inject HttpClient httpClient

@rendermode InteractiveAuto

<h1>COLABORADORES</h1>

<a href="/" class="btn btn-primary">Voltar</a>
<br ><br>

<MudDataGrid Items="@Colabs" Filterable="false" SortMode="@SortMode.None" Groupable="false">
    <Columns>
        <PropertyColumn Property="x => x.NomeCompleto" Title="Colaborador" />
        <PropertyColumn Property="x => x.DepartamentoId" Title="Departamento" />
        <PropertyColumn Property="x => x.DataAdmissao" Title="Admissao" />
        <PropertyColumn Property="x => x.Cargo" Title="Cargo" />
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudStack Row>
                    <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Editar</MudButton>
                </MudStack>
            </CellTemplate>
            <CellTemplate>
                <MudStack Row>
                    <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Surface">Requisicoes</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    // private IEnumerable<Colaborador> Elements = new List<Colaborador>();

    // protected override async Task OnInitializedAsync()
    // {
    //     Elements = await _colaboradorService.GetAllColaboradoresAsync();
    // }


    private List<Colaborador> Colabs { get; set; } = new();

    private async Task CarregaColaboradores()
    {
        var colaboradors = await _colaboradorService.GetAllColaboradoresAsync();

        Colabs?.Clear();

        if (Colabs is null) return;

        foreach (var colaborador in colaboradors)
            Colabs.Add(colaborador);
    }

    protected override async Task OnInitializedAsync()
    {
        await CarregaColaboradores();
    }









}